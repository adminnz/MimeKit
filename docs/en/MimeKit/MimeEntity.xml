<Type Name="MimeEntity" FullName="MimeKit.MimeEntity">
  <TypeSignature Language="C#" Value="public abstract class MimeEntity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeEntity extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MimeKit</AssemblyName>
    <AssemblyVersion>0.16.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstract MIME entity.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeEntity (MimeKit.MimeEntityConstructorInfo entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MimeKit.MimeEntityConstructorInfo entity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entity" Type="MimeKit.MimeEntityConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="entity">Information used by the constructor.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeEntity" /> class
            based on the <see cref="T:MimeKit.MimeEntityConstructorInfo" />.
            </summary>
        <remarks>
            Custom <see cref="T:MimeKit.MimeEntity" /> subclasses MUST implement this constructor
            in order to register it using <see cref="M:MimeKit.MimeEntity.Register(System.String,System.Type)" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeEntity (string mediaType, string mediaSubtype);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string mediaType, string mediaSubtype) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="mediaSubtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type.</param>
        <param name="mediaSubtype">The media subtype.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MimeKit.MimeEntity" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mediaType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="mediaSubtype" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentDisposition">
      <MemberSignature Language="C#" Value="public MimeKit.ContentDisposition ContentDisposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ContentDisposition ContentDisposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentDisposition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content disposition.
            </summary>
        <value>The content disposition.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public string ContentId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the content identifier.
            </summary>
        <value>The content identifier.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public MimeKit.ContentType ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.ContentType ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.ContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the content.
            </summary>
        <value>The type of the content.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public MimeKit.HeaderList Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MimeKit.HeaderList Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.HeaderList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of headers.
            </summary>
        <value>The list of headers.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializing">
      <MemberSignature Language="C#" Value="protected bool IsInitializing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitializing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this instance is initializing.
            </summary>
        <value>
          <c>true</c> if this instance is initializing; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The name of the file to load.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileName" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.IO.IOException">
            An error occurred reading the file.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="stream">The stream.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified stream.
            </summary>
        <returns>The parsed MIME entity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static MimeKit.MimeEntity Load (MimeKit.ParserOptions options, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MimeKit.MimeEntity Load(class MimeKit.ParserOptions options, string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.ParserOptions" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The parser options.</param>
        <param name="fileName">The name of the file to load.</param>
        <summary>
            Load a <see cref="T:MimeKit.MimeEntity" /> from the specified file.
            </summary>
        <returns>The parsed entity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="fileName" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
            The specified file path is empty.
            </exception>
        <exception cref="T:System.IO.FileNotFoundException">
            The specified file could not be found.
            </exception>
        <exception cref="T:System.UnauthorizedAccessException">
            The user does not have access to read the specified file.
            </exception>
        <exception cref="T:System.IO.IOException">
            An error occurred reading the file.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Raises the changed event.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeadersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeadersChanged (MimeKit.HeaderListChangedAction action, MimeKit.Header header);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeadersChanged(valuetype MimeKit.HeaderListChangedAction action, class MimeKit.Header header) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="MimeKit.HeaderListChangedAction" />
        <Parameter Name="header" Type="MimeKit.Header" />
      </Parameters>
      <Docs>
        <param name="action">The type of change.</param>
        <param name="header">The header being added, changed or removed.</param>
        <summary>
            Called when the headers change in some way.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (string mimeType, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(string mimeType, class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mimeType">The MIME type.</param>
        <param name="type">A custom subclass of <see cref="T:MimeKit.MimeEntity" />.</param>
        <summary>
            Registers the custom MIME entity. Once registered, all <see cref="T:MimeKit.MimeParser" />
            instances will instantiate your custom <see cref="T:MimeKit.MimeEntity" /> when the specified
            mime-type is encountered.
            </summary>
        <remarks>
            Your custom <see cref="T:MimeKit.MimeEntity" /> class should not subclass
            <see cref="T:MimeKit.MimeEntity" /> directly, but rather it should subclass
            <see cref="T:MimeKit.Multipart" />, <see cref="T:MimeKit.MimePart" />,
            <see cref="T:MimeKit.MessagePart" />, or one of their derivatives.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mimeType" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="type" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="type" /> is not a subclass of <see cref="T:MimeKit.Multipart" />,
            <see cref="T:MimeKit.MimePart" />, or <see cref="T:MimeKit.MessagePart" />.</para>
          <para>-or-</para>
          <para>
            <paramref name="type" /> does not have a constructor that takes
            only a <see cref="T:MimeKit.MimeEntityConstructorInfo" /> argument.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHeader">
      <MemberSignature Language="C#" Value="protected void RemoveHeader (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveHeader(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <summary>
            Removes the header.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="protected void SetHeader (string name, byte[] rawValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHeader(string name, unsigned int8[] rawValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rawValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <param name="rawValue">The raw value of the header.</param>
        <summary>
            Sets the header using the raw value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeader">
      <MemberSignature Language="C#" Value="protected void SetHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHeader(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the header.</param>
        <param name="value">The value of the header.</param>
        <summary>
            Sets the header.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryInit">
      <MemberSignature Language="C#" Value="protected bool TryInit (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool TryInit(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object.</param>
        <summary>
            Try to use given object to initialize itself.
            </summary>
        <returns>
          <c>true</c> if the object was recognized and used; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">The stream.</param>
        <summary>
            Writes the entity instance to the specified stream.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (MimeKit.FormatOptions options, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class MimeKit.FormatOptions options, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.16.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="MimeKit.FormatOptions" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="options">The formatting options.</param>
        <param name="stream">The stream.</param>
        <summary>
            Writes the entity instance to the specified stream.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="options" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="stream" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
